<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="hdispatch.core.dispatch.mapper_hdispatch.ExecutionJobsMapper" >
  <resultMap id="BaseResultMap" type="hdispatch.core.dispatch.dto.ExecutionJobs" >
    <id column="attempt" property="attempt" jdbcType="INTEGER" />
    <id column="exec_id" property="execId" jdbcType="INTEGER" />
    <id column="job_id" property="jobId" jdbcType="VARCHAR" />
    <result column="project_id" property="projectId" jdbcType="INTEGER" />
    <result column="version" property="version" jdbcType="INTEGER" />
    <result column="flow_id" property="flowId" jdbcType="VARCHAR" />
    <result column="lang" property="lang" jdbcType="VARCHAR" />
    <result column="meaning" property="meaning" jdbcType="VARCHAR" />
    <result column="start_time" property="startTime" jdbcType="BIGINT" />
    <result column="end_time" property="endTime" jdbcType="BIGINT" />
    <result column="status" property="status" jdbcType="TINYINT" />
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="hdispatch.core.dispatch.dto.ExecutionJobsWithBLOBs" extends="BaseResultMap" >
    <result column="input_params" property="inputParams" jdbcType="LONGVARBINARY" />
    <result column="output_params" property="outputParams" jdbcType="LONGVARBINARY" />
    <result column="attachments" property="attachments" jdbcType="LONGVARBINARY" />
  </resultMap>
  <sql id="Base_Column_List" >
    attempt, exec_id, job_id, project_id, version, flow_id, start_time, end_time, status
  </sql>
  <sql id="Blob_Column_List" >
    input_params, output_params, attachments
  </sql>
  <select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs" parameterType="hdispatch.core.dispatch.dto.ExecutionJobsKey" >
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from execution_jobs
    where attempt = #{attempt,jdbcType=INTEGER}
      and exec_id = #{execId,jdbcType=INTEGER}
      and job_id = #{jobId,jdbcType=VARCHAR}
      
  </select>
    <select id="selectJobsByFlow" resultMap="ResultMapWithBLOBs" parameterType="hdispatch.core.dispatch.dto.ExecutionJobs" >
    select 
    attempt, exec_id, job_id, project_id, version, flow_id, start_time, end_time, status
    ,
    scvb.meaning as meaning
    ,
    <include refid="Blob_Column_List" />
    from execution_jobs,sys_code_b scb,sys_code_value_b scvb,sys_code_value_tl scv
    where attempt = 0
    and scb.CODE_ID = scvb.CODE_ID
	and execution_jobs.status=scvb.value
	and scvb.CODE_VALUE_ID = scv.CODE_VALUE_ID
	and scb.CODE = 'HDISPATCH.JOB_STATUS'
	and SCV.LANG = #{lang,jdbcType=VARCHAR}
      and exec_id = #{execId,jdbcType=INTEGER}
      order by start_time asc
  </select>
  <delete id="deleteByPrimaryKey" parameterType="hdispatch.core.dispatch.dto.ExecutionJobsKey" >
    delete from execution_jobs
    where attempt = #{attempt,jdbcType=INTEGER}
      and exec_id = #{execId,jdbcType=INTEGER}
      and job_id = #{jobId,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="hdispatch.core.dispatch.dto.ExecutionJobsWithBLOBs" >
    insert into execution_jobs (attempt, exec_id, job_id, 
      project_id, version, flow_id, 
      start_time, end_time, status, 
      input_params, output_params, 
      attachments)
    values (#{attempt,jdbcType=INTEGER}, #{execId,jdbcType=INTEGER}, #{jobId,jdbcType=VARCHAR},
      #{projectId,jdbcType=INTEGER}, #{version,jdbcType=INTEGER}, #{flowId,jdbcType=VARCHAR},
      #{startTime,jdbcType=BIGINT}, #{endTime,jdbcType=BIGINT}, #{status,jdbcType=TINYINT},
      #{inputParams,jdbcType=LONGVARBINARY}, #{outputParams,jdbcType=LONGVARBINARY},
      #{attachments,jdbcType=LONGVARBINARY})
  </insert>
</mapper>